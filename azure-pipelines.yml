# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageRepo: weatherapi_aks
  tag: '$(Build.BuildId)'
#create the docker image
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    #     tags: |
    #       $(tag)
#build and push the docker image
    - task: Docker@2
      inputs:
        containerRegistry: 'bdorobek dockerhub'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
#publish the manifest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/kubernetes'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: acrauth
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool: 
      vmImage: ubuntu-latest
    steps:
#download the manifest
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
#create the secret
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'bdorobek AKS'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'bdorobek dockerhub'
#deploy the deployment files
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'bdorobek AKS'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/setvice.yml